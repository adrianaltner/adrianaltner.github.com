---
import type { CollectionEntry } from "astro:content";
import { Image } from 'astro:assets';
import FormattedDate from "../components/FormattedDate.astro";

type Props = {
  post: CollectionEntry<'blog'>;
  next?: CollectionEntry<'blog'>;
  prev?: CollectionEntry<'blog'>;
  relatedPosts?: CollectionEntry<'blog'>[];
};

const { post, next, prev, relatedPosts = [] } = Astro.props;
const { title, pubDate, updatedDate, heroImage } = post.data;

---

<article>
  <div class="hero-image">
    {heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
  </div>
  <div class="prose">
    <div class="title">
      <div class="date">
        <FormattedDate date={pubDate} />
        {
          updatedDate && (
            <div class="last-updated-on">
              Last updated on <FormattedDate date={updatedDate} />
            </div>
          )
        }
      </div>
      <h1>{title}</h1>
      <hr />
    </div>
    <slot />
  </div>
  {post.data.related && (
    <div class="related-posts">
      <h2>Related Posts</h2>
      <ul>
        {relatedPosts.map((relatedPost) => (
          <li>
            <a href={`/blog/${relatedPost.id}`}>
              {relatedPost.data.title}
            </a>
          </li>
        ))}
      </ul>
    </div>
  )}

  {(next || prev) && (
    <div class="post-navigation">
      {prev && (
        <div class="post-nav-item">
          <h2 class="post-nav-label">
            Previous Post
          </h2>
          <div class="post-nav-link">
            <a href={`/blog/${prev.id}`}>
              {prev.data.title}
            </a>
          </div>
        </div>
      )}
      {next && (
        <div class="post-nav-item">
          <h2 class="post-nav-label">
            Next Post
          </h2>
          <div class="post-nav-link">
            <a href={`/blog/${next.id}`}>
              {next.data.title}
            </a>
          </div>
        </div>
      )}
    </div>
  )}
</article>

<style>
  .hero-image {
    width: 100%;

    & img {
      display: block;
      margin: 0 auto;
      border-radius: 12px;
      box-shadow: var(--box-shadow);
    }
  }

  .prose {
    padding: 1em;
    color: rgb(var(--gray-dark));
  }

  .title {
    margin-bottom: 1em;
    padding: 1em 0;
    text-align: center;
    line-height: 1;

    & h1 {
      margin: 0 0 0.5em 0;
    }
  }

  .date {
    margin-bottom: 0.5em;
    color: rgb(var(--gray));
  }

  .last-updated-on {
    font-style: italic;
  }

  .post-navigation {
    display: flex;
    justify-content: space-between;
    padding: 2rem 0;
  }

  .post-nav-item {
    max-width: 45%;
  }

  .post-nav-label {
    font-size: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: #666;
  }

  .post-nav-link a {
    color: #333;
    text-decoration: none;
  }

  .post-nav-link a:hover {
    color: #0066cc;
  }

  @media (max-width: 1280px) {
    .post-navigation {
      flex-direction: column;
      gap: 2rem;
    }

    .post-nav-item {
      max-width: 100%;
    }
  }
</style>

---
import type { CollectionEntry } from "astro:content";
import { Image } from 'astro:assets';
import FormattedDate from "~/components/FormattedDate.astro";
import { getEntry } from 'astro:content';

type Props = {
  post: CollectionEntry<'blog'>;
  next?: CollectionEntry<'blog'>;
  prev?: CollectionEntry<'blog'>;
};

const { post, next, prev } = Astro.props;
const { title, pubDate, updatedDate, heroImage, category, related } = post.data;

const categoryName = category ? await getEntry('categories', category.id) : undefined;
const relatedPosts = related ? await Promise.all(related.map(ref => getEntry('blog', ref.id))) : [];

---

<article>
  <div class="hero-image">
    {heroImage && <Image width={1020} height={510} src={heroImage} format="avif" alt="" />}
  </div>
  <div class="prose">
    <div class="post-header">
      <div class="post-meta">
        {categoryName && (
          <div class="category">
            <a href={`/blog/category/${categoryName.id}`}>
              <span class="category-label">ðŸ“‚</span>
              {categoryName.data.title}
            </a>
          </div>
        )}
        <div class="date-info">
          <time datetime={pubDate.toISOString()}>
            <FormattedDate date={pubDate} />
          </time>
          {updatedDate && (
            <div class="updated">
              <span class="update-label">ðŸ”„</span>
              Updated <FormattedDate date={updatedDate} />
            </div>
          )}
        </div>
      </div>
      <h1>{title}</h1>
    </div>
    <slot />
  </div>
  <div class="tags">
    {post.data.tags.map((tag) => (
      <a href={`/blog/tags/${tag}`} class="tag">{tag}</a>
    ))}
  </div>

  {relatedPosts.length > 0 && (
    <div class="related-posts">
      <h2 class="related-posts-title">Related Posts</h2>
      <ul class="related-posts-list">
        {relatedPosts.map((relatedPost) => relatedPost && (
          <li class="related-post-item">
            <a href={`/blog/${relatedPost.id}`}>
              {relatedPost.data.title}
            </a>
          </li>
        ))}
      </ul>
    </div>
  )}

  {(next || prev) && (
    <nav class="post-navigation">
      {prev && (
        <div class="post-nav-item prev">
          <span class="post-nav-label">Previous Post</span>
          <a href={`/blog/${prev.id}`} class="post-nav-link">
            {prev.data.title}
          </a>
        </div>
      )}
      {next && (
        <div class="post-nav-item next">
          <span class="post-nav-label">Next Post</span>
          <a href={`/blog/${next.id}`} class="post-nav-link">
            {next.data.title}
          </a>
        </div>
      )}
    </nav>
  )}
</article>

<style>
  .hero-image {
    width: 100%;

    & img {
      display: block;
      margin: 0 auto;
      border-radius: 12px;
      box-shadow: var(--box-shadow);
    }
  }

  .prose {
    padding: 1em;
    color: rgb(var(--gray-dark));
  }

  .post-header {
    text-align: center;
    margin-bottom: 2.5rem;
  }

  .post-meta {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1.5rem;
    margin-bottom: 1.5rem;
    font-size: 0.925rem;
  }

  .category a {
    display: inline-flex;
    align-items: center;
    gap: 0.5em;
    padding: 0.4em 0.8em;
    background: rgba(var(--accent), 0.1);
    border-radius: 2em;
    color: rgb(var(--accent));
    text-decoration: none;
    transition: all 0.2s ease;
  }

  .category a:hover {
    background: rgba(var(--accent), 0.15);
    transform: translateY(-1px);
  }

  .date-info {
    display: flex;
    align-items: center;
    gap: 1rem;
    color: rgb(var(--gray));
  }

  .date-info time {
    display: inline-flex;
    align-items: center;
    gap: 0.3em;
  }

  .updated {
    display: inline-flex;
    align-items: center;
    gap: 0.3em;
    font-size: 0.875em;
    opacity: 0.8;
  }

  h1 {
    margin: 0;
    font-weight: 700;
    line-height: 1.3;
    color: rgb(var(--accent));
  }

  .post-navigation {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin: 4rem 0;
    padding-top: 2rem;
    border-top: 1px solid #e2e8f0;
  }

  .post-nav-item {
    display: flex;
    flex-direction: column;
  }

  .post-nav-item.prev {
    align-items: flex-start;
  }

  .post-nav-item.next {
    align-items: flex-end;
    text-align: right;
  }

  .post-nav-label {
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: #718096;
    margin-bottom: 0.5rem;
  }

  .post-nav-link {
    font-size: 1.125rem;
    color: #2d3748;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .post-nav-link:hover {
    color: #2b6cb0;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin: 1rem 0;
  }

  .tag {
    display: inline-block;
    padding: 0.3rem 0.8rem;
    border-radius: 999px;
    background-color: #f3f4f6;
    color: #4b5563;
    text-decoration: none;
    font-size: 0.875rem;
    transition: all 0.2s ease-in-out;
  }

  .tag:hover {
    background-color: #e5e7eb;
    color: #1f2937;
    transform: translateY(-1px);
  }

  .related-posts {
    margin: 4rem 0;
    padding: 2rem;
    background: #f8f9fa;
    border-radius: 8px;
  }

  .related-posts-title {
    font-size: 1.5rem;
    margin-bottom: 1.5rem;
    color: #2d3748;
  }

  .related-posts-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .related-post-item {
    margin-bottom: 1rem;
  }

  .related-post-item a {
    color: #4a5568;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .related-post-item a:hover {
    color: #2b6cb0;
  }

  @media (max-width: 720px) {
    .post-meta {
      flex-direction: column;
      gap: 0.8rem;
    }
  }

  @media (max-width: 1280px) {
    .post-navigation {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .post-nav-item.next {
      align-items: flex-start;
      text-align: left;
    }
  }

  @media (max-width: 640px) {
    .post-navigation {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .post-nav-item.next {
      align-items: flex-start;
      text-align: left;
    }
  }
</style>

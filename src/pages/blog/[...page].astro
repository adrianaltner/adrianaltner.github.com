---
import Layout from '~/layouts/BlogLayout.astro';
import FormattedDate from "~/components/FormattedDate.astro";
import Pagination from "~/components/Pagination.astro";
import { Image } from 'astro:assets';
import { SITE } from '~/site.config';
import type { Page, GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';

const meta = {
  title: "Blog | " + SITE.title,
  description: "Blog",
};

export const getStaticPaths = (async ({ paginate }) => {
  const posts = (await getCollection("blog")).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );
  
  // Always generate at least one page, even if there are no posts
  return paginate(posts, { 
    pageSize: SITE.blogPostsPerPage,
    props: { showEmpty: posts.length === 0 }
  });
}) satisfies GetStaticPaths;

interface Props {
  page: Page<CollectionEntry<'blog'>>;
  showEmpty: boolean;
};

const { page, showEmpty } = Astro.props;

const categories = await getCollection('categories');
const posts = await getCollection('blog');
const tags = [...new Set(posts.flatMap(post => post.data.tags))].sort();

---

<Layout {meta}>
  <div id="Categories" class="taxonomy-section">
    <h2>Categories</h2>
    <div class="taxonomy-items">
      {categories.map((category) => (
        <a
          href={`/blog/categories/${category.id}`}
          class="taxonomy-link category"
        >
          {category.data.title || category.id}
        </a>
      ))}
    </div>
  </div>

  <div id="Tags" class="taxonomy-section">
    <h2>Tags</h2>
    <div class="taxonomy-items">
      {tags.map((tag) => (
        <a
          href={`/blog/tags/${tag}`}
          class="taxonomy-link tag"
        >
          #{tag}
        </a>
      ))}
    </div>
  </div>


  <section class="blog-list">
    {showEmpty ? (
      <p>No blog posts yet. Check back soon!</p>
    ) : (
    <ul>
      {
        page.data.map((post) => (
          <li>
            <a href={`/blog/${post.id}/`}>
              {post.data.heroImage && (
                <Image 
                  width={720} 
                  height={360} 
                  src={post.data.heroImage} 
                  alt="" 
                  format="avif"
                  quality={80}
                />
              )}
              <h4 class="title">{post.data.title}</h4>
              <p class="date">
                <FormattedDate date={post.data.pubDate} />
              </p>
            </a>
          </li>
        ))
      }
    </ul>
    )}
  </section>
  {(page.url.next || page.url.prev) && <Pagination page={page} />}
</Layout>

<style>
  .blog-list {
    container-type: inline-size;
    container-name: blog-list;
  }
  ul {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    list-style-type: none;
    margin: 0;
    padding: 0;
  }
  ul li {
    width: 100%;
  }
  ul li * {
    text-decoration: none;
    transition: 0.2s ease;
  }
  ul li:first-child {
    text-align: center;
  }
  ul li:first-child img {
    width: 100%;
  }
  ul li img {
    margin-bottom: 0.5rem;
    border-radius: 12px;
  }
  ul li a {
    display: block;
  }
  .title {
    margin: 0;
    color: rgb(var(--black));
    line-height: 1;
  }
  .date {
    margin: 0;
    color: rgb(var(--gray));
  }
  ul li a:hover h4,
  ul li a:hover .date {
    color: rgb(var(--accent));
  }
  ul a:hover img {
    box-shadow: var(--box-shadow);
  }

  @container blog-list (min-width: 40em) {
    ul li {
      width: calc(50% - 1rem);
    }
    ul li:first-child {
      width: 100%;
      margin-bottom: 1rem;
    }
    ul li:first-child .title {
      font-size: 2.369rem;
    }
  }

  .taxonomy-section {
      margin-bottom: 2rem;
    }

    .taxonomy-section h2 {
      font-size: 1.25rem;
      font-weight: bold;
      margin-bottom: 1rem;
    }

    .taxonomy-items {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
    }

    .taxonomy-link {
      padding: 0.25rem 0.75rem;
      border-radius: 9999px;
      font-size: 0.875rem;
      transition: background-color 0.2s;
      text-decoration: none;
    }

    .taxonomy-link.category {
      background-color: #f3f4f6;
    }

    .taxonomy-link.category:hover {
      background-color: #e5e7eb;
    }

    .taxonomy-link.tag {
      background-color: #eff6ff;
    }

    .taxonomy-link.tag:hover {
      background-color: #dbeafe;
    }
</style>
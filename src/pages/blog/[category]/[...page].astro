---
import Layout from '~/layouts/BlogLayout.astro';
import FormattedDate from "~/components/FormattedDate.astro";
import Pagination from "~/components/Pagination.astro";
import { Image } from 'astro:assets';
import { SITE } from '~/site.config';
import type { Page, GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection, render} from 'astro:content';

interface Props {
  page: Page<CollectionEntry<'blog'>>;
  entry: CollectionEntry<'categories'>;
}

export const getStaticPaths = (async ({ paginate }) => {
  const categories = await getCollection("categories");
  const posts = (await getCollection("blog")).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );

  return categories.flatMap((entry) => {
    const categoryPosts = posts.filter((post) =>
      post.data.category?.id === entry.id
    );
    return paginate(categoryPosts, {
      pageSize: SITE.blogPostsPerPage,
      params: { category: entry.id },
      props: { entry },
    });
  });
}) satisfies GetStaticPaths;

const { page, entry } = Astro.props;
const { Content } = await render(entry);

const meta = {
  title: entry.data.title + " | Blog | " + SITE.title,
  description: entry.data.description || "Blog posts in category " + entry.data.title,
};
---

<Layout {meta}>
  <div class="category-header">
    <Content />
  </div>
  <section class="blog-list">
    {page.data.length === 0 ? (
      <p>No blog posts yet in this category. Check back soon!</p>
    ) : (
    <ul>
      {
        page.data.map((post) => (
          <li>
            <a href={`/blog/${post.id}/`}>
              {post.data.heroImage && (
                <Image 
                  width={720} 
                  height={360} 
                  src={post.data.heroImage} 
                  alt="" 
                />
              )}
              <h4 class="title">{post.data.title}</h4>
              <p class="date">
                <FormattedDate date={post.data.pubDate} />
              </p>
            </a>
          </li>
        ))
      }
    </ul>
    )}
  </section>
  {(page.url.next || page.url.prev) && <Pagination page={page} />}
</Layout>

<style>
  .category-header {
    margin-bottom: 2rem;
    text-align: center;
  }
  .category-header h1 {
    margin: 0;
    font-size: 2.369rem;
  }
  .blog-list {
    container-type: inline-size;
    container-name: blog-list;
  }
  ul {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    list-style-type: none;
    margin: 0;
    padding: 0;
  }
  ul li {
    width: 100%;
  }
  ul li * {
    text-decoration: none;
    transition: 0.2s ease;
  }
  ul li:first-child {
    text-align: center;
  }
  ul li:first-child img {
    width: 100%;
  }
  ul li img {
    margin-bottom: 0.5rem;
    border-radius: 12px;
  }
  ul li a {
    display: block;
  }
  .title {
    margin: 0;
    color: rgb(var(--black));
    line-height: 1;
  }
  .date {
    margin: 0;
    color: rgb(var(--gray));
  }
  ul li a:hover h4,
  ul li a:hover .date {
    color: rgb(var(--accent));
  }
  ul a:hover img {
    box-shadow: var(--box-shadow);
  }

  @container blog-list (min-width: 40em) {
    ul li {
      width: calc(50% - 1rem);
    }
    ul li:first-child {
      width: 100%;
      margin-bottom: 1rem;
    }
    ul li:first-child .title {
      font-size: 2.369rem;
    }
  }
</style>